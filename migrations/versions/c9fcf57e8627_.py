"""empty message

Revision ID: c9fcf57e8627
Revises: 473fefa4c4b0
Create Date: 2024-02-23 10:44:00.794101

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c9fcf57e8627'
down_revision = '473fefa4c4b0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('georef_gobiernos_locales',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('fuente', sa.String(), nullable=False),
    sa.Column('categoria', sa.String(), nullable=False),
    sa.Column('nombre_completo', sa.String(), nullable=False),
    sa.Column('provincia_interseccion', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('geometria', geoalchemy2.types.Geometry(srid=4326), nullable=True),
    sa.Column('provincia_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['provincia_id'], ['georef_provincias.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )

    op.add_column('georef_asentamientos', sa.Column('gobierno_local_id', sa.String(), nullable=True))
    op.drop_constraint('georef_asentamientos_municipio_id_fkey', 'georef_asentamientos', type_='foreignkey')
    op.create_foreign_key(None, 'georef_asentamientos', 'georef_gobiernos_locales', ['gobierno_local_id'], ['id'], ondelete='cascade')
    op.drop_column('georef_asentamientos', 'municipio_id')
    op.add_column('georef_localidades', sa.Column('gobierno_local_id', sa.String(), nullable=True))
    op.drop_constraint('georef_localidades_municipio_id_fkey', 'georef_localidades', type_='foreignkey')
    op.create_foreign_key(None, 'georef_localidades', 'georef_gobiernos_locales', ['gobierno_local_id'], ['id'], ondelete='cascade')
    op.drop_column('georef_localidades', 'municipio_id')
    op.add_column('georef_localidades_censales', sa.Column('gobierno_local_id', sa.String(), nullable=True))
    op.drop_constraint('georef_localidades_censales_municipio_id_fkey', 'georef_localidades_censales', type_='foreignkey')
    op.create_foreign_key(None, 'georef_localidades_censales', 'georef_gobiernos_locales', ['gobierno_local_id'], ['id'], ondelete='cascade')
    op.drop_column('georef_localidades_censales', 'municipio_id')
    op.drop_table('georef_municipios')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('georef_municipios',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('fuente', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('categoria', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('nombre_completo', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('provincia_interseccion', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
              nullable=False),
    sa.Column('lon', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('lat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('geometria', geoalchemy2.types.Geometry(srid=4326), autoincrement=False, nullable=False),
    sa.Column('provincia_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['provincia_id'], ['georef_provincias.id'],
                            name='georef_municipios_provincia_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='georef_municipios_pkey')
    )
    op.add_column('georef_localidades_censales', sa.Column('municipio_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'georef_localidades_censales', type_='foreignkey')
    op.create_foreign_key('georef_localidades_censales_municipio_id_fkey', 'georef_localidades_censales', 'georef_municipios', ['municipio_id'], ['id'], ondelete='CASCADE')
    op.drop_column('georef_localidades_censales', 'gobierno_local_id')
    op.add_column('georef_localidades', sa.Column('municipio_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'georef_localidades', type_='foreignkey')
    op.create_foreign_key('georef_localidades_municipio_id_fkey', 'georef_localidades', 'georef_municipios', ['municipio_id'], ['id'], ondelete='CASCADE')
    op.drop_column('georef_localidades', 'gobierno_local_id')
    op.add_column('georef_asentamientos', sa.Column('municipio_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'georef_asentamientos', type_='foreignkey')
    op.create_foreign_key('georef_asentamientos_municipio_id_fkey', 'georef_asentamientos', 'georef_municipios', ['municipio_id'], ['id'], ondelete='CASCADE')
    op.drop_column('georef_asentamientos', 'gobierno_local_id')

    op.drop_table('georef_gobiernos_locales')
    # ### end Alembic commands ###
